name: Auto Complete README

on:
  push:
    branches: [main] # 현재 브랜치도 추가
  pull_request:
    branches: [main]

# 동시 실행 방지
concurrency:
  group: auto-complete-readme-${{ github.ref }}
  cancel-in-progress: false

jobs:
  auto-complete-readme:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 파일 수정 및 푸시 권한
      pull-requests: write # PR 작업 권한 (필요시)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5 # 최신 버전으로 업데이트
        with:
          python-version: "3.11" # 더 최신 버전 사용

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Find and process README files
        run: |
          python .github/scripts/auto_complete_readme.py
        continue-on-error: false # 스크립트 실패 시 워크플로우 중단

      - name: Check for changes
        id: git-check
        run: |
          if git diff --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # 원격 브랜치와 동기화
          git fetch origin ${{ github.ref_name }}

          git add .
          git commit -m "docs: auto-complete README files with problem information" || exit 0

      - name: Push changes
        if: steps.git-check.outputs.changes == 'true'
        run: |
          # 원격에 변경사항이 있는지 확인 후 rebase
          if ! git diff --quiet HEAD origin/${{ github.ref_name }}; then
            echo "Remote has changes, rebasing..."
            git pull --rebase origin ${{ github.ref_name }} || {
              echo "Rebase failed, trying merge strategy"
              git rebase --abort
              git pull origin ${{ github.ref_name }}
            }
          fi

          git push origin ${{ github.ref_name }}
